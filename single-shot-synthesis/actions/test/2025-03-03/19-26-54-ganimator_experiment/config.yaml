engine:
  runner:
    _target_: moai.engine.runner.LightningRunner
    check_val_every_n_epoch: 1
    gradient_clip_val: 0
    gradient_clip_algorithm: norm
    accumulate_grad_batches: 1
    limit_train_batches: 1.0
    limit_val_batches: 1.0
    limit_test_batches: 1.0
    limit_predict_batches: 1.0
    val_check_interval: 1.0
    reload_dataloaders_every_n_epochs: 0
    deterministic: false
    auto_lr_find: false
    terminate_on_nan: false
    auto_scale_batch_size: false
    relative_tolerance: 1.0e-09
    gradient_tolerance: 1.0e-09
    num_nodes: 1
    num_processes: 1
    accelerator: auto
    devices: 1
    gpus:
    - 0
    precision: 32
    benchmark: false
    auto_select_gpus: false
    amp_backend: native
    amp_level: null
    prepare_data_per_node: true
    replace_sampler_ddp: true
    strategy: auto
    enable_model_summary: true
    detect_anomaly: false
    flush_logs_every_n_steps: 1
    log_every_n_steps: 1
    progress_bar_refresh_rate: 1
    weights_summary: top
    profiler: simple
    default_root_dir: ''
    fast_dev_run: false
    num_sanity_val_steps: 0
    track_grad_norm: -1
    process_position: 0
    move_metrics_to_cpu: false
    multiple_trainloader_mode: max_size_cycle
    stochastic_weight_avg: false
    checkpoint:
      _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: fid/repeated_npz
      verbose: false
      save_weights_only: true
      mode: min
      save_top_k: 3
      save_last: true
      dirpath: null
      filename: '{epoch}-{fid/repeated_npz:.8f}'
      auto_insert_metric_name: true
      every_n_train_steps: null
      train_time_interval: null
      every_n_epochs: 1
      save_on_train_epoch_end: false
    loggers:
      tabular:
        _target_: moai.log.loggers.tabular.Tabular
        name: ${experiment.name}
    max_epochs: 4
  modules:
    manual_seed:
      _target_: moai.engine.modules.seed.ManualSeed
      seed: 1337
      deterministic: true
    import:
      _target_: moai.engine.modules.importer.Import
      run_path: true
      other_paths: []
    numpy:
      _target_: moai.engine.modules.numpy.Numpy
data:
  train:
    loader:
      _target_: torch.utils.data.DataLoader
      batch_size: ${oc.select:experiment.batch_size,1}
      shuffle: true
      num_workers: 0
      pin_memory: false
      drop_last: false
      prefetch_factor: null
      persistent_workers: false
      pin_memory_device: ''
    iterator:
      _target_: moai.data.iterator.Indexed
      datasets:
        repeated_npz:
          _target_: moai.data.datasets.generic.npz.RepeatedNpz
          filename: ${npz_filename}
          length: ${train_data_iter}
  val:
    loader:
      _target_: torch.utils.data.DataLoader
      batch_size: 1
      shuffle: false
      num_workers: 0
      pin_memory: true
      drop_last: false
      prefetch_factor: null
    iterator:
      _target_: moai.data.iterator.Indexed
      datasets:
        repeated_npz:
          _target_: moai.data.datasets.generic.npz.RepeatedNpz
          filename: ${npz_filename}
          length: 200
  test:
    loader:
      _target_: torch.utils.data.DataLoader
      batch_size: ${oc.select:experiment.batch_size,1}
      shuffle: false
      num_workers: 0
      pin_memory: false
      drop_last: false
      prefetch_factor: null
      persistent_workers: false
      pin_memory_device: ''
    iterator:
      _target_: moai.data.iterator.Indexed
      datasets:
        repeated_npz:
          _target_: moai.data.datasets.generic.npz.RepeatedNpz
          filename: ${npz_filename}
          length: 5
model:
  _target_: moai.core.model.MoaiLightningModule
  components:
    gen_s1:
      _target_: src.components.ganimator.Generator
      parents:
      - -1
      - 0
      - 1
      - 2
      - 3
      - 4
      - 0
      - 6
      - 7
      - 8
      - 9
      - 0
      - 11
      - 12
      - 13
      - 14
      - 13
      - 16
      - 17
      - 18
      - 13
      - 20
      - 21
      - 22
      contacts:
      - 4
      - 5
      - 9
      - 10
      kernel_size: 5
      padding_mode: reflect
      bias: true
      stages: 2
    gen_s4:
      _target_: src.components.ganimator.Generator
      parents:
      - -1
      - 0
      - 1
      - 2
      - 3
      - 4
      - 0
      - 6
      - 7
      - 8
      - 9
      - 0
      - 11
      - 12
      - 13
      - 14
      - 13
      - 16
      - 17
      - 18
      - 13
      - 20
      - 21
      - 22
      contacts:
      - 4
      - 5
      - 9
      - 10
      kernel_size: 5
      padding_mode: reflect
      bias: true
      stages: 1
    disc_s1:
      _target_: src.components.ganimator.Discriminator
      parents:
      - -1
      - 0
      - 1
      - 2
      - 3
      - 4
      - 0
      - 6
      - 7
      - 8
      - 9
      - 0
      - 11
      - 12
      - 13
      - 14
      - 13
      - 16
      - 17
      - 18
      - 13
      - 20
      - 21
      - 22
      contacts:
      - 4
      - 5
      - 9
      - 10
      kernel_size: 5
      padding_mode: reflect
      bias: true
      stages: 2
    disc_s4:
      _target_: src.components.ganimator.Discriminator
      parents:
      - -1
      - 0
      - 1
      - 2
      - 3
      - 4
      - 0
      - 6
      - 7
      - 8
      - 9
      - 0
      - 11
      - 12
      - 13
      - 14
      - 13
      - 16
      - 17
      - 18
      - 13
      - 20
      - 21
      - 22
      contacts:
      - 4
      - 5
      - 9
      - 10
      kernel_size: 5
      padding_mode: reflect
      bias: true
      stages: 1
    gen_s2: ${model.components.gen_s1}
    gen_s3: ${model.components.gen_s1}
    disc_s2: ${model.components.disc_s1}
    disc_s3: ${model.components.disc_s1}
  monads:
    interpolate:
      _target_: moai.monads.sampling.torch.interpolate.Interpolate
      scale: 1.0
      width: -1
      height: -1
      mode: linear
      align_corners: false
      recompute_scale_factor: false
      preserve_aspect_ratio: false
    random:
      _target_: moai.monads.generation.tensor.torch.Random
      shape: 1
      mode: unit
      scale: 1.0
      includes_batch: false
    matrix_transpose:
      _target_: moai.monads.math.common.MatrixTranspose
    rad2deg:
      _target_: moai.monads.math.Rad2Deg
    rotmat_to_euler:
      _target_: moai.monads.geometry.rotations.euler.RotationMatrixToEuler
      order: XYZ
    gram_schmidt:
      _target_: moai.monads.geometry.rotations.gram_schmidt.GramSchmidt
    roma_rotmat_to_sixd:
      _target_: moai.monads.geometry.rotations.gram_schmidt.ExtractSixd
    rotmat_to_unitquat:
      _target_: moai.monads.geometry.rotations.conversions.RotationMatrix2Quaternion
    roma_rotmat_to_rotvec:
      _target_: moai.monads.geometry.rotations.RomaRotationMatrix2RotationVector
    fake_history_level_0:
      _target_: moai.monads.generative.fake_history.GradualFakeHistory
      history_size: 50
      percentage: 0.5
    fake_history_level_1:
      _target_: moai.monads.generative.fake_history.GradualFakeHistory
      history_size: 50
      percentage: 0.5
    index:
      _target_: moai.monads.masking.mask.Index
      indices:
      - 4
      - 5
      - 9
      - 10
      dim: -2
      persistent: true
    encode_motion:
      _target_: src.monads.feature_extractors.movement_encoder.MotionEncoderBiGRUCo
      ckpt: ${mdm_ckpt}
    encode_movement:
      _target_: src.monads.feature_extractors.movement_encoder.MovementConvEncoder
      ckpt: ${mdm_ckpt}
    forward_kinematics:
      _target_: moai.monads.human.pose.forward_kinematics.ForwardKinematics
      parents:
      - -1
      - 0
      - 1
      - 2
      - 3
      - 4
      - 0
      - 6
      - 7
      - 8
      - 9
      - 0
      - 11
      - 12
      - 13
      - 14
      - 13
      - 16
      - 17
      - 18
      - 13
      - 20
      - 21
      - 22
    root_angular_velocity:
      _target_: src.monads.utils.root_velocity.AngularVelocity
      zero_pad: true
    root_linear_velocity_xz:
      _target_: src.monads.utils.root_velocity.LinearVelocityXZ
    create_random_clips:
      _target_: src.monads.utils.create_clips.CreateRandomClips
      window_size: 35
    create_mdm_repr:
      _target_: src.monads.utils.create_mdm_representation.MDMRepresentation
    index_last:
      _target_: moai.monads.masking.Index
      indices: 0
      dim: -1
      persistent: true
    index_root:
      _target_: moai.monads.masking.Index
      indices: 0
      dim: -3
      persistent: true
    index_root_pos:
      _target_: moai.monads.masking.Index
      indices: 0
      dim: -2
      persistent: true
    force_grad:
      _target_: src.monads.utils.force_grad.ForceGrad
    demux:
      _target_: src.monads.utils.demux.DeMux
      joints: 24
      features: 6
    simple_velocity:
      _target_: src.monads.utils.simple_velocity.SimpleVelocity
      zero_pad: true
    simple_velocity_val:
      _target_: src.monads.utils.simple_velocity.SimpleVelocity
      zero_pad: true
      return_norm: false
    integrate_velocity:
      _target_: src.monads.utils.integrate_velocity.IntegrateVelocity
      ignore_y: true
    to_smplh:
      _target_: src.monads.utils.smplh.ToSMPLH
      from_joint_number: 24
      mapping:
      - - 0
      - - 1
      - - 6
      - - 11
      - - 2
      - - 7
      - - 12
      - - 3
      - - 8
      - - 13
      - - 5
      - - 10
      - - 14
      - - 13
        - 16
      - - 13
        - 20
      - - 15
      - - 16
      - - 20
      - - 17
      - - 21
      - - 18
      - - 22
    scalar:
      value: -1
  modifications:
    forward_mode:
      _target_: moai.remodel.forward_mode.ForwardMode
      modules: null
      monads: null
  parameters:
    initializers:
      partial:
        _target_: moai.parameters.initialization.partial.Partial
        named_components.gen_s1:
          from: ${CKPT}
          keys:
          - '*.gen_s1.*'
          replace:
          - source: models.gen_s1.
            target: null
        named_components.gen_s2:
          from: ${CKPT}
          keys:
          - '*.gen_s2.*'
          replace:
          - source: models.gen_s2.
            target: null
        named_components.gen_s3:
          from: ${CKPT}
          keys:
          - '*.gen_s3.*'
          replace:
          - source: models.gen_s3.
            target: null
        named_components.gen_s4:
          from: ${CKPT}
          keys:
          - '*.gen_s4.*'
          replace:
          - source: models.gen_s4.
            target: null
    optimizers:
      adam:
        _target_: torch.optim.Adam
        lr: 0.0001
        betas:
        - 0.9
        - 0.999
        eps: 1.0e-08
        weight_decay: 0.0
        amsgrad: false
    groups:
      gen_s1:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - gen_s1
      gen_s2:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - gen_s2
      gen_s3:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - gen_s3
      gen_s4:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - gen_s4
      disc_s1:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - disc_s1
      disc_s2:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - disc_s2
      disc_s3:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - disc_s3
      disc_s4:
        _target_: moai.parameters.selectors.model.ModelParameterSelector
        modules:
        - disc_s4
  objectives:
    L1:
      _target_: moai.supervision.objectives.regression.L1.L1
      mode: raw
      bias: 0.0
    gradient_penalty:
      _target_: moai.supervision.objectives.generative.gradient_penalty.GradientPenalty
    disc_wasserstein:
      _target_: src.supervision.generative.wasserstein.DiscriminatorWasserstein
      per_batch: false
    gen_wasserstein:
      _target_: src.supervision.generative.wasserstein.GeneratorWasserstein
      per_batch: false
    velocity:
      _target_: src.supervision.custom.velocity.VeloLabelConsistencyLoss
  metrics:
    fid:
      _target_: moai.validation.metrics.generation.fid.FID
    coverage:
      _target_: src.metrics.generation.ganimator_metrics.Coverage
      tmin: 30
      threshold: 2.0
    gdiv:
      _target_: src.metrics.generation.ganimator_metrics.GlobalDiversity
      tmin: 30
    ldiv:
      _target_: src.metrics.generation.ganimator_metrics.LocalDiversity
      tmin: 15
      keepall: false
    mdm_gdiv:
      _target_: src.metrics.generation.mdm_metrics.MDMInterDiversity
    mdm_ldiv:
      _target_: src.metrics.generation.mdm_metrics.MDMIntraDiversity
  monitors:
    bvh:
      _target_: src.exporters.bvh.bvh_export
      _partial_: true
CKPT: C:/Users/tsele/Documents/GitHub/Blendanim/single-shot-synthesis/actions/fit/2025-02-28/18-36-13-ganimator_experiment/ganimator_experiment/version_0/checkpoints/last.ckpt
experiment:
  batch_size: 1
  workers: 0
  name: ganimator_experiment
npz_filename: C:/Users/tsele/Documents/Mixamo/npz/00000.npz
train_data_iter: 15000
feet_indices:
- 4
- 5
- 9
- 10
gen_prototype: ${model.components.gen_s1}
disc_prototype: ${model.components.disc_s1}
_moai_:
  _definitions_:
    _flows_:
      gen_s1:
        noise0:
        - noise_level_0
        noise1:
        - noise_level_1
        generated:
        - prev
        _out_:
        - fake
      gen_s2:
        noise0:
        - noise_level_2
        noise1:
        - noise_level_3
        generated:
        - prev
        _out_:
        - fake
      gen_s3:
        noise0:
        - noise_level_4
        noise1:
        - noise_level_5
        generated:
        - prev
        _out_:
        - fake
      gen_s4:
        noise0:
        - noise_level_6
        generated:
        - prev
        _out_:
        - fake
      disc_s1:
        fake0:
        - fake.stage0
        - motion_data_level_x
        - interpolated_0
        fake1:
        - fake.stage1
        - motion_data_level_y
        - interpolated_1
        _out_:
        - fake_score
        - real_score
        - interpolated_score
      disc_s2:
        fake0:
        - fake.stage0
        - motion_data_level_x
        - interpolated_0
        fake1:
        - fake.stage1
        - motion_data_level_y
        - interpolated_1
        _out_:
        - fake_score
        - real_score
        - interpolated_score
      disc_s3:
        fake0:
        - fake.stage0
        - motion_data_level_x
        - interpolated_0
        fake1:
        - fake.stage1
        - motion_data_level_y
        - interpolated_1
        _out_:
        - fake_score
        - real_score
        - interpolated_score
      disc_s4:
        fake0:
        - fake.stage0
        - motion_data_level_x
        - interpolated_0
        _out_:
        - fake_score
        - real_score
        - interpolated_score
      horizontal_input_mapping:
        _mi_:
          expression:
          - ${mi:"randn(motion_data_level_0) * unsq(amps_level_0, 1, 1)"}
          - ${mi:"randn(motion_data_level_1) * unsq(amps_level_1, 1, 1)"}
          - ${mi:"randn(motion_data_level_2) * unsq(amps_level_2, 1, 1)"}
          - ${mi:"randn(motion_data_level_3) * unsq(amps_level_3, 1, 1)"}
          - ${mi:"randn(motion_data_level_4) * unsq(amps_level_4, 1, 1)"}
          - ${mi:"randn(motion_data_level_5) * unsq(amps_level_5, 1, 1)"}
          - ${mi:"randn(motion_data_level_6) * unsq(amps_level_6, 1, 1)"}
          _out_:
          - noise_level_0
          - noise_level_1
          - noise_level_2
          - noise_level_3
          - noise_level_4
          - noise_level_5
          - noise_level_6
      stage_1:
        _mi_:
          expression:
          - motion_data_level_0
          - motion_data_level_1
          - ${mi:"zeros(motion_data_level_0)"}
          _out_:
          - motion_data_level_x
          - motion_data_level_y
          - prev
      stage_1_reco:
        _mi_:
          expression:
          - z_star
          - ${mi:"zeros(motion_data_level_1)"}
          _out_:
          - noise_level_0
          - noise_level_1
      stage_2:
        interpolate:
          image:
          - fake.stage1
          target:
          - motion_data_level_2
          _out_:
          - prev
        _mi_:
          expression:
          - motion_data_level_2
          - motion_data_level_3
          _out_:
          - motion_data_level_x
          - motion_data_level_y
      stage_2_reco:
        _mi_:
          expression:
          - ${mi:"zeros(motion_data_level_2)"}
          - ${mi:"zeros(motion_data_level_3)"}
          _out_:
          - noise_level_2
          - noise_level_3
      stage_3:
        interpolate:
          image:
          - fake.stage1
          target:
          - motion_data_level_4
          _out_:
          - prev
        _mi_:
          expression:
          - motion_data_level_4
          - motion_data_level_5
          _out_:
          - motion_data_level_x
          - motion_data_level_y
      stage_3_reco:
        _mi_:
          expression:
          - ${mi:"zeros(motion_data_level_4)"}
          - ${mi:"zeros(motion_data_level_5)"}
          _out_:
          - noise_level_4
          - noise_level_5
      stage_4:
        interpolate:
          image:
          - fake.stage1
          target:
          - motion_data_level_6
          _out_:
          - prev
        _mi_:
          expression:
          - motion_data_level_6
          _out_:
          - motion_data_level_x
      stage_4_reco:
        _mi_:
          expression:
          - ${mi:"zeros(motion_data_level_6)"}
          _out_:
          - noise_level_6
      stage_1_val:
        _mi_:
          expression:
          - ${mi:"randn(motion_data_level_0) * unsq(amps_level_0, 1, 1)"}
          - ${mi:"zeros(motion_data_level_1)"}
          - motion_data_level_0
          - motion_data_level_1
          - ${mi:"zeros(motion_data_level_0)"}
          _out_:
          - noise_level_0
          - noise_level_1
          - motion_data_level_x
          - motion_data_level_y
          - prev
      stage_2_val:
        interpolate:
          image:
          - fake.stage1
          target:
          - motion_data_level_2
          _out_:
          - prev
        _mi_:
          expression:
          - ${mi:"zeros(motion_data_level_2)"}
          - ${mi:"zeros(motion_data_level_3)"}
          - motion_data_level_2
          - motion_data_level_3
          _out_:
          - noise_level_2
          - noise_level_3
          - motion_data_level_x
          - motion_data_level_y
      stage_3_val:
        interpolate:
          image:
          - fake.stage1
          target:
          - motion_data_level_4
          _out_:
          - prev
        _mi_:
          expression:
          - ${mi:"zeros(motion_data_level_4)"}
          - ${mi:"zeros(motion_data_level_5)"}
          - motion_data_level_4
          - motion_data_level_5
          _out_:
          - noise_level_4
          - noise_level_5
          - motion_data_level_x
          - motion_data_level_y
      stage_4_val:
        interpolate:
          image:
          - fake.stage1
          target:
          - motion_data_level_6
          _out_:
          - prev
        _mi_:
          expression:
          - ${mi:"zeros(motion_data_level_6)"}
          - motion_data_level_6
          _out_:
          - noise_level_6
          - motion_data_level_x
      disc_prediscrimination:
        random:
          tensor:
          - motion_data_level_x
          - motion_data_level_y
          _out_:
          - blend_0
          - blend_1
        force_grad:
          tensor:
          - ${mi:"(motion_data_level_x * unsq(blend_0, 1)) + (fake.stage0 * (1 - unsq(blend_0,
            1)))"}
          - ${mi:"(motion_data_level_y * unsq(blend_1, 1)) + (fake.stage1 * (1 - unsq(blend_1,
            1)))"}
          _out_:
          - interpolated_0
          - interpolated_1
        fake_history_level_0:
          fake:
          - fake.stage0
          _out_:
          - fake_level_0
        fake_history_level_1:
          fake:
          - fake.stage1
          _out_:
          - fake_level_1
      disc_prediscrimination_s4:
        random:
          tensor:
          - motion_data_level_x
          _out_:
          - blend_0
        force_grad:
          tensor:
          - ${mi:"(motion_data_level_x * unsq(blend_0, 1)) + (fake.stage0 * (1 - unsq(blend_0,
            1)))"}
          _out_:
          - interpolated_0
        fake_history_level_0:
          fake:
          - fake.stage0
          _out_:
          - fake_level_0
      sample_prediscrimination:
        random:
          tensor:
          - motion_data_level_x
          - motion_data_level_y
          _out_:
          - blend_0
          - blend_1
        force_grad:
          tensor:
          - ${mi:"(motion_data_level_x * unsq(blend_0, 1)) + (fake.stage0 * (1 - unsq(blend_0,
            1)))"}
          - ${mi:"(motion_data_level_y * unsq(blend_1, 1)) + (fake.stage1 * (1 - unsq(blend_1,
            1)))"}
          _out_:
          - interpolated_0
          - interpolated_1
        demux:
          motion_data:
          - ${mi:"transpose(fake.stage0, -2, -1)"}
          - ${mi:"transpose(fake.stage1, -2, -1)"}
          - ${mi:"transpose(motion_data_level_x, -2, -1)"}
          - ${mi:"transpose(motion_data_level_y, -2, -1)"}
          _out_:
          - demuxed_0
          - demuxed_1
          - demuxed_gt_0
          - demuxed_gt_1
        gram_schmidt:
          sixd:
          - demuxed_0.joint_sixd
          - demuxed_1.joint_sixd
          - demuxed_gt_0.joint_sixd
          - demuxed_gt_1.joint_sixd
          _out_:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_1
          - demuxed_gt_joint_rotmat_0
          - demuxed_gt_joint_rotmat_1
        integrate_velocity:
          velocity:
          - demuxed_0.root_position
          - demuxed_1.root_position
          - demuxed_gt_0.root_position
          - demuxed_gt_1.root_position
          position:
          - root_position
          - root_position
          - root_position
          - root_position
          _out_:
          - global_root_position_0
          - global_root_position_1
          - global_root_position_0_gt
          - global_root_position_1_gt
        forward_kinematics:
          rotation:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_1
          - demuxed_gt_joint_rotmat_0
          - demuxed_gt_joint_rotmat_1
          position:
          - global_root_position_0
          - global_root_position_1
          - global_root_position_0_gt
          - global_root_position_1_gt
          offsets:
          - joint_offsets
          - joint_offsets
          - joint_offsets
          - joint_offsets
          parents:
          - joint_parents
          - joint_parents
          - joint_parents
          - joint_parents
          _out_:
          - fk_0_pred
          - fk_1_pred
          - fk_0_gt
          - fk_1_gt
        simple_velocity:
          positions:
          - ${mi:"fk_0_pred.positions[:,:,${feet_indices}]"}
          - ${mi:"fk_1_pred.positions[:,:,${feet_indices}]"}
          _out_:
          - velocities_0
          - velocities_1
      sample_prediscrimination_s4:
        random:
          tensor:
          - motion_data_level_x
          _out_:
          - blend_0
        force_grad:
          tensor:
          - ${mi:"(motion_data_level_x * unsq(blend_0, 1)) + (fake.stage0 * (1 - unsq(blend_0,
            1)))"}
          _out_:
          - interpolated_0
        demux:
          motion_data:
          - ${mi:"transpose(fake.stage0, -2, -1)"}
          - ${mi:"transpose(motion_data_level_x, -2, -1)"}
          _out_:
          - demuxed_0
          - demuxed_gt_0
        gram_schmidt:
          sixd:
          - demuxed_0.joint_sixd
          - demuxed_gt_0.joint_sixd
          _out_:
          - demuxed_joint_rotma_0
          - demuxed_gt_joint_rotmat_0
        integrate_velocity:
          velocity:
          - demuxed_0.root_position
          - demuxed_gt_0.root_position
          position:
          - root_position
          - root_position
          _out_:
          - global_root_position_0
          - global_root_position_0_gt
        forward_kinematics:
          rotation:
          - demuxed_joint_rotma_0
          - demuxed_gt_joint_rotmat_0
          position:
          - global_root_position_0
          - global_root_position_0_gt
          offsets:
          - joint_offsets
          - joint_offsets
          parents:
          - joint_parents
          - joint_parents
          _out_:
          - fk_0_pred
          - fk_0_gt
        simple_velocity:
          positions:
          - ${mi:"fk_0_pred.positions[:,:,${feet_indices}]"}
          _out_:
          - velocities_0
      reco_prediscrimination:
        random:
          tensor:
          - motion_data_level_x
          - motion_data_level_y
          _out_:
          - blend_0
          - blend_1
        force_grad:
          tensor:
          - ${mi:"(motion_data_level_x * unsq(blend_0, 1)) + (fake.stage0 * (1 - unsq(blend_0,
            1)))"}
          - ${mi:"(motion_data_level_y * unsq(blend_1, 1)) + (fake.stage1 * (1 - unsq(blend_1,
            1)))"}
          _out_:
          - interpolated_0
          - interpolated_1
        demux:
          motion_data:
          - ${mi:"transpose(fake.stage0, -2, -1)"}
          - ${mi:"transpose(fake.stage1, -2, -1)"}
          - ${mi:"transpose(motion_data_level_x, -2, -1)"}
          - ${mi:"transpose(motion_data_level_y, -2, -1)"}
          _out_:
          - demuxed_0
          - demuxed_1
          - demuxed_gt_0
          - demuxed_gt_1
        gram_schmidt:
          sixd:
          - demuxed_0.joint_sixd
          - demuxed_1.joint_sixd
          - demuxed_gt_0.joint_sixd
          - demuxed_gt_1.joint_sixd
          _out_:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_1
          - demuxed_gt_joint_rotmat_0
          - demuxed_gt_joint_rotmat_1
        integrate_velocity:
          velocity:
          - demuxed_0.root_position
          - demuxed_1.root_position
          - demuxed_gt_0.root_position
          - demuxed_gt_1.root_position
          position:
          - root_position
          - root_position
          - root_position
          - root_position
          _out_:
          - global_root_position_0
          - global_root_position_1
          - global_root_position_0_gt
          - global_root_position_1_gt
        forward_kinematics:
          rotation:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_1
          - demuxed_gt_joint_rotmat_0
          - demuxed_gt_joint_rotmat_1
          position:
          - global_root_position_0
          - global_root_position_1
          - global_root_position_0_gt
          - global_root_position_1_gt
          offsets:
          - joint_offsets
          - joint_offsets
          - joint_offsets
          - joint_offsets
          parents:
          - joint_parents
          - joint_parents
          - joint_parents
          - joint_parents
          _out_:
          - fk_0_pred
          - fk_1_pred
          - fk_0_gt
          - fk_1_gt
        simple_velocity:
          positions:
          - ${mi:"fk_0_pred.positions[:,:,${feet_indices}]"}
          - ${mi:"fk_1_pred.positions[:,:,${feet_indices}]"}
          _out_:
          - velocities_0
          - velocities_1
      reco_prediscrimination_s4:
        random:
          tensor:
          - motion_data_level_x
          _out_:
          - blend_0
        force_grad:
          tensor:
          - ${mi:"(motion_data_level_x * unsq(blend_0, 1)) + (fake.stage0 * (1 - unsq(blend_0,
            1)))"}
          _out_:
          - interpolated_0
        demux:
          motion_data:
          - ${mi:"transpose(fake.stage0, -2, -1)"}
          - ${mi:"transpose(motion_data_level_x, -2, -1)"}
          _out_:
          - demuxed_0
          - demuxed_gt_0
        gram_schmidt:
          sixd:
          - demuxed_0.joint_sixd
          - demuxed_gt_0.joint_sixd
          _out_:
          - demuxed_joint_rotma_0
          - demuxed_gt_joint_rotmat_0
        integrate_velocity:
          velocity:
          - demuxed_0.root_position
          - demuxed_gt_0.root_position
          position:
          - root_position
          - root_position
          _out_:
          - global_root_position_0
          - global_root_position_0_gt
        forward_kinematics:
          rotation:
          - demuxed_joint_rotma_0
          - demuxed_gt_joint_rotmat_0
          position:
          - global_root_position_0
          - global_root_position_0_gt
          offsets:
          - joint_offsets
          - joint_offsets
          parents:
          - joint_parents
          - joint_parents
          _out_:
          - fk_0_pred
          - fk_0_gt
        simple_velocity:
          positions:
          - ${mi:"fk_0_pred.positions[:,:,${feet_indices}]"}
          _out_:
          - velocities_0
      val_prediscrimination:
        matrix_transpose:
          matrix:
          - fake.stage0
          - motion_data_level_x
          _out_:
          - fake_level_0_T
          - motion_data_level_0_T
        demux:
          motion_data:
          - ${mi:"transpose(fake.stage1, -2, -1)"}
          - ${mi:"transpose(motion_data_level_y, -2, -1)"}
          _out_:
          - demuxed_0
          - demuxed_gt_0
      val_prediscrimination_last:
        matrix_transpose:
          matrix:
          - fake.stage0
          - motion_data_level_x
          _out_:
          - fake_level_0_T
          - motion_data_level_0_T
        demux:
          motion_data:
          - ${mi:"transpose(fake.stage0, -2, -1)"}
          - ${mi:"transpose(motion_data_level_x, -2, -1)"}
          _out_:
          - demuxed_0
          - demuxed_gt_0
      val_prediscrimination_post:
        gram_schmidt:
          sixd:
          - demuxed_0.joint_sixd
          - demuxed_gt_0.joint_sixd
          _out_:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_0_gt
        integrate_velocity:
          velocity:
          - demuxed_0.root_position
          - demuxed_gt_0.root_position
          position:
          - root_position
          - root_position
          _out_:
          - global_root_position_0
          - global_root_position_0_gt
        forward_kinematics:
          rotation:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_0_gt
          position:
          - global_root_position_0
          - global_root_position_0_gt
          offsets:
          - joint_offsets
          - joint_offsets
          parents:
          - joint_parents
          - joint_parents
          _out_:
          - fk_0_pred
          - fk_0_gt
        index_last:
          tensor:
          - demuxed_0.contact_feats
          _out_:
          - contacts
        rotmat_to_euler:
          rotation:
          - demuxed_joint_rotma_0
          _out_:
          - demuxed_joint_euler_0
        roma_rotmat_to_sixd:
          matrix:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_0_gt
          _out_:
          - joint_rotations_sixd
          - joint_rotations_sixd_gt
        _mi_:
          expression:
          - ${mi:"flatten(joint_rotations_sixd, 2)"}
          - ${mi:"flatten(demuxed_0.contact_feats, 2)"}
          - ${mi:"flatten(demuxed_gt_0.joint_sixd, 2)"}
          - ${mi:"flatten(demuxed_gt_0.contact_feats, 2)"}
          - ${mi:"cat(joint_sixd, gen_contact_feats, -1)"}
          - ${mi:"cat(gt_sixd, gt_contact_feats, -1)"}
          - demuxed_joint_rotma_0
          - fk_0_pred.positions
          - demuxed_0.root_position
          _out_:
          - joint_sixd
          - gen_contact_feats
          - gt_sixd
          - gt_contact_feats
          - gen_feats
          - gt_feats
          - joint_rotations
          - joint_positions
          - joint_velocity
        to_smplh:
          positions:
          - fk_0_pred.positions
          - fk_0_gt.positions
          rotations:
          - joint_rotations_sixd
          - joint_rotations_sixd_gt
          _out_:
          - smplh
          - smplh_gt
        simple_velocity_val:
          positions:
          - smplh.positions
          - smplh_gt.positions
          _out_:
          - smplh_joints_velocity
          - smplh_joints_velocity_gt
        index_root:
          tensor:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_0_gt
          _out_:
          - r_rotmat
          - r_rotmat_gt
        index_root_pos:
          tensor:
          - smplh_joints_velocity
          - smplh_joints_velocity_gt
          _out_:
          - r_velocity
          - r_velocity_gt
        rotmat_to_unitquat:
          rotation:
          - r_rotmat
          - r_rotmat_gt
          _out_:
          - r_quat
          - r_quat_gt
        root_linear_velocity_xz:
          velocity:
          - r_velocity
          - r_velocity_gt
          rotations:
          - r_quat
          - r_quat_gt
          _out_:
          - r_linear_velocity
          - r_linear_velocity_gt
        root_angular_velocity:
          rotations:
          - r_quat
          - r_quat_gt
          _out_:
          - r_angular_velocity
          - r_angular_velocity_gt
        create_mdm_repr:
          positions:
          - smplh.positions
          - smplh_gt.positions
          rotations:
          - smplh.rotations
          - smplh_gt.rotations
          velocities:
          - smplh_joints_velocity
          - smplh_joints_velocity_gt
          linear:
          - r_linear_velocity
          - r_linear_velocity_gt
          angular:
          - r_angular_velocity
          - r_angular_velocity_gt
          _out_:
          - mdm
          - mdm_gt
        create_random_clips:
          motion:
          - mdm
          - mdm_gt
          _out_:
          - mdm_clips
          - mdm_gt_clips
        encode_movement:
          inputs:
          - mdm
          - mdm_gt
          - mdm_clips
          - mdm_gt_clips
          _out_:
          - movement_embed
          - movement_embed_gt
          - clips_movement_embeds
          - clips_movement_embeds_gt
        encode_motion:
          inputs:
          - movement_embed
          - movement_embed_gt
          - clips_movement_embeds
          - clips_movement_embeds_gt
          _out_:
          - motion_embed
          - motion_embed_gt
          - clips_embeds
          - clips_embeds_gt
      test_prediscrimination_post:
        gram_schmidt:
          sixd:
          - demuxed_0.joint_sixd
          - demuxed_gt_0.joint_sixd
          _out_:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_0_gt
        rotmat_to_euler:
          rotation:
          - demuxed_joint_rotma_0
          _out_:
          - demuxed_joint_euler_0
        rad2deg:
          radians:
          - demuxed_joint_euler_0
          _out_:
          - demuxed_joint_euler_0
        integrate_velocity:
          velocity:
          - demuxed_0.root_position
          - demuxed_gt_0.root_position
          position:
          - root_position
          - root_position
          _out_:
          - global_root_position_0
          - global_root_position_0_gt
        forward_kinematics:
          rotation:
          - demuxed_joint_rotma_0
          - demuxed_joint_rotma_0_gt
          position:
          - global_root_position_0
          - global_root_position_0_gt
          offsets:
          - joint_offsets
          - joint_offsets
          parents:
          - joint_parents
          - joint_parents
          _out_:
          - fk_0_pred
          - fk_0_gt
    _collections_:
      _optimizers_:
        optim_disc:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - disc_s1
        optim_gen:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - gen_s1
        optim_disc_stage_1:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - disc_s2
        optim_gen_stage_1:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - gen_s2
        optim_disc_stage_2:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - disc_s3
        optim_gen_stage_2:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - gen_s3
        optim_disc_stage_3:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - disc_s4
        optim_gen_stage_3:
          _type_: adam
          _params_:
            lr: 0.0001
          _groups_:
          - gen_s4
      _objectives_:
        discriminate:
          disc_wasserstein:
            real:
            - real_score.stage0
            - real_score.stage1
            fake:
            - fake_score.stage0
            - fake_score.stage1
            _weight_:
            - 1.0
            - 1.0
            _reduction_:
            - sum
            - sum
            _out_:
            - D_0
            - D_1
          gradient_penalty:
            blended_samples:
            - interpolated_0
            - interpolated_1
            blended_scores:
            - interpolated_score.stage0
            - interpolated_score.stage1
            _weight_:
            - 1.0
            - 1.0
            _out_:
            - GP_0
            - GP_1
        discriminate_last:
          disc_wasserstein:
            real:
            - real_score.stage0
            fake:
            - fake_score.stage0
            _weight_:
            - 1.0
            _reduction_:
            - sum
            _out_:
            - D_0
          gradient_penalty:
            blended_samples:
            - interpolated_0
            blended_scores:
            - interpolated_score.stage0
            _weight_:
            - 1.0
            _out_:
            - GP_0
        sample:
          gen_wasserstein:
            fake:
            - fake_score.stage0
            - fake_score.stage1
            _weight_:
            - 1.0
            - 1.0
            _reduction_:
            - sum
            - sum
            _out_:
            - fake_G_0
            - fake_G_1
          velocity:
            pred:
            - demuxed_0.contact_labels
            - demuxed_1.contact_labels
            gt:
            - velocities_0
            - velocities_1
            _weight_:
            - 5.0
            - 5.0
            _out_:
            - foot_consistency_0
            - foot_consistency_1
        sample_last:
          gen_wasserstein:
            fake:
            - fake_score.stage0
            _weight_:
            - 1.0
            _reduction_:
            - sum
            _out_:
            - fake_G_0
          velocity:
            pred:
            - demuxed_0.contact_labels
            gt:
            - velocities_0
            _weight_:
            - 5.0
            _out_:
            - foot_consistency_0
        reco:
          L1:
            gt:
            - motion_data_level_x
            - motion_data_level_y
            pred:
            - fake.stage0
            - fake.stage1
            _weight_:
            - 50.0
            - 50.0
            _out_:
            - rec_0
            - rec_1
        reco_last:
          L1:
            gt:
            - motion_data_level_x
            pred:
            - fake.stage0
            _weight_:
            - 50.0
            _out_:
            - rec_0
      _metrics_:
        features:
          coverage:
            pred:
            - gen_feats
            gt:
            - gt_feats
            _out_:
            - coverage
          gdiv:
            pred:
            - gen_feats
            gt:
            - gt_feats
            _out_:
            - ganimator_gdiv
          ldiv:
            pred:
            - gen_feats
            gt:
            - gt_feats
            _out_:
            - ganimator_ldiv
          mdm_gdiv:
            pred:
            - motion_embed
            gt:
            - motion_embed_gt
            _out_:
            - mdm_gdiv
          mdm_ldiv:
            pred:
            - clips_embeds
            gt:
            - clips_embeds_gt
            _out_:
            - mdm_ldiv
          fid:
            pred:
            - motion_embed
            gt:
            - motion_embed_gt
            _out_:
            - fid
      _monitors_:
        export_generated_skeleton:
          bvh:
            output_name:
            - ${bvh_filename}
            export_path:
            - ${export_filepath}
            parents:
            - joint_parents
            position:
            - global_root_position_0
            rotations:
            - demuxed_joint_euler_0
            offsets:
            - joint_offsets
            scale:
            - 100.0
            names:
            - - Hips
              - LeftUpLeg
              - LeftLeg
              - LeftFoot
              - LeftToeBase
              - LeftToe_End
              - RightUpLeg
              - RightLeg
              - RightFoot
              - RightToeBase
              - RightToe_End
              - Spine
              - Spine1
              - Spine2
              - Neck
              - Head
              - LeftShoulder
              - LeftArm
              - LeftForeArm
              - LeftHand
              - RightShoulder
              - RightArm
              - RightForeArm
              - RightHand
  _execution_:
    _initialize_:
      _test_:
        _setup_:
        - partial
    _lightning_step_:
      _test_:
        _datasets_:
          repeated_npz:
            _flows_:
            - stage_1_val
            - gen_s1
            - stage_2_val
            - gen_s2
            - stage_3_val
            - gen_s3
            - stage_4_val
            - gen_s4
            - val_prediscrimination_last
            - test_prediscrimination_post
    _schedule_:
    - _epoch_: 1
      _modifications_:
        forward_mode:
          modules:
            gen_s1: eval_nograd
      _fit_:
        _stages_:
          process_disc:
            _optimizer_: optim_disc_stage_1
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - gen_s1
            - stage_2
            - gen_s2
            - disc_prediscrimination
            - disc_s2
          process_sample:
            _optimizer_: optim_gen_stage_1
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - gen_s1
            - stage_2
            - gen_s2
            - sample_prediscrimination
            - disc_s2
          process_reco:
            _optimizer_: optim_gen_stage_1
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - stage_1_reco
            - gen_s1
            - stage_2
            - stage_2_reco
            - gen_s2
            - reco_prediscrimination
      _val_:
        _datasets_:
          repeated_npz:
            _flows_:
            - stage_1_val
            - gen_s1
            - stage_2_val
            - gen_s2
            - val_prediscrimination
            - val_prediscrimination_post
    - _epoch_: 2
      _modifications_:
        forward_mode:
          modules:
            gen_s2: eval_nograd
      _fit_:
        _stages_:
          process_disc:
            _optimizer_: optim_disc_stage_2
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - gen_s1
            - stage_2
            - gen_s2
            - stage_3
            - gen_s3
            - disc_prediscrimination
            - disc_s3
          process_sample:
            _optimizer_: optim_gen_stage_2
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - gen_s1
            - stage_2
            - gen_s2
            - stage_3
            - gen_s3
            - sample_prediscrimination
            - disc_s3
          process_reco:
            _optimizer_: optim_gen_stage_2
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - stage_1_reco
            - gen_s1
            - stage_2
            - stage_2_reco
            - gen_s2
            - stage_3
            - stage_3_reco
            - gen_s3
            - reco_prediscrimination
      _val_:
        _datasets_:
          repeated_npz:
            _flows_:
            - stage_1_val
            - gen_s1
            - stage_2_val
            - gen_s2
            - stage_3_val
            - gen_s3
            - val_prediscrimination
            - val_prediscrimination_post
    - _epoch_: 3
      _modifications_:
        forward_mode:
          modules:
            gen_s3: eval_nograd
      _fit_:
        _stages_:
          process_disc:
            _optimizer_: optim_disc_stage_3
            _objective_: discriminate_last
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - gen_s1
            - stage_2
            - gen_s2
            - stage_3
            - gen_s3
            - stage_4
            - gen_s4
            - disc_prediscrimination_s4
            - disc_s4
          process_sample:
            _optimizer_: optim_gen_stage_3
            _objective_: sample_last
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - gen_s1
            - stage_2
            - gen_s2
            - stage_3
            - gen_s3
            - stage_4
            - gen_s4
            - sample_prediscrimination_s4
            - disc_s4
          process_reco:
            _optimizer_: optim_gen_stage_3
            _objective_: reco_last
            _flows_:
            - horizontal_input_mapping
            - stage_1
            - stage_1_reco
            - gen_s1
            - stage_2
            - stage_2_reco
            - gen_s2
            - stage_3
            - stage_3_reco
            - gen_s3
            - stage_4
            - stage_4_reco
            - gen_s4
            - reco_prediscrimination_s4
      _val_:
        _datasets_:
          repeated_npz:
            _flows_:
            - stage_1_val
            - gen_s1
            - stage_2_val
            - gen_s2
            - stage_3_val
            - gen_s3
            - stage_4_val
            - gen_s4
            - val_prediscrimination_last
            - val_prediscrimination_post
    _monitoring_:
      _test_:
        _datasets_:
          repeated_npz:
            _frequency_: 1
            _metrics_: []
            _monitors_:
            - export_generated_skeleton
DISC_FREQ: 5
GEN_FREQ: 1
REC_FREQ: 1
export_filepath: C:/Users/tsele/Documents/Mixamo/generated/bvh
bvh_filename: salsa_dance_variant
mdm_ckpt: C:/Users/tsele/Documents/t2m/text_mot_match/model/finest.tar
mode: run
action: test
